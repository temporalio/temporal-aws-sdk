// Generated by github.com/temporalio/temporal-aws-sdk-generator
// from github.com/aws/aws-sdk-go version 1.35.7
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.

package chime

import (
	"context"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/chime"
	"github.com/aws/aws-sdk-go/service/chime/chimeiface"
	"go.temporal.io/aws-sdk/internal"
)

// ensure that imports are valid even if not used by the generated code
var _ = internal.SetClientToken

type _ request.Option

// SessionFactory returns an aws.Session based on the activity context.
type SessionFactory interface {
	Session(ctx context.Context) (*session.Session, error)
}

type Activities struct {
	client chimeiface.ChimeAPI

	sessionFactory SessionFactory
}

func NewActivities(sess *session.Session, config ...*aws.Config) *Activities {
	client := chime.New(sess, config...)
	return &Activities{client: client}
}

func NewActivitiesWithSessionFactory(sessionFactory SessionFactory) *Activities {
	return &Activities{sessionFactory: sessionFactory}
}

func (a *Activities) getClient(ctx context.Context) (chimeiface.ChimeAPI, error) {
	if a.client != nil { // No need to protect with mutex: we know the client never changes
		return a.client, nil
	}

	sess, err := a.sessionFactory.Session(ctx)
	if err != nil {
		return nil, err
	}

	return chime.New(sess), nil
}

func (a *Activities) AssociatePhoneNumberWithUser(ctx context.Context, input *chime.AssociatePhoneNumberWithUserInput) (*chime.AssociatePhoneNumberWithUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.AssociatePhoneNumberWithUserWithContext(ctx, input)
}

func (a *Activities) AssociatePhoneNumbersWithVoiceConnector(ctx context.Context, input *chime.AssociatePhoneNumbersWithVoiceConnectorInput) (*chime.AssociatePhoneNumbersWithVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.AssociatePhoneNumbersWithVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) AssociatePhoneNumbersWithVoiceConnectorGroup(ctx context.Context, input *chime.AssociatePhoneNumbersWithVoiceConnectorGroupInput) (*chime.AssociatePhoneNumbersWithVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.AssociatePhoneNumbersWithVoiceConnectorGroupWithContext(ctx, input)
}

func (a *Activities) AssociateSigninDelegateGroupsWithAccount(ctx context.Context, input *chime.AssociateSigninDelegateGroupsWithAccountInput) (*chime.AssociateSigninDelegateGroupsWithAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.AssociateSigninDelegateGroupsWithAccountWithContext(ctx, input)
}

func (a *Activities) BatchCreateAttendee(ctx context.Context, input *chime.BatchCreateAttendeeInput) (*chime.BatchCreateAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchCreateAttendeeWithContext(ctx, input)
}

func (a *Activities) BatchCreateRoomMembership(ctx context.Context, input *chime.BatchCreateRoomMembershipInput) (*chime.BatchCreateRoomMembershipOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchCreateRoomMembershipWithContext(ctx, input)
}

func (a *Activities) BatchDeletePhoneNumber(ctx context.Context, input *chime.BatchDeletePhoneNumberInput) (*chime.BatchDeletePhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchDeletePhoneNumberWithContext(ctx, input)
}

func (a *Activities) BatchSuspendUser(ctx context.Context, input *chime.BatchSuspendUserInput) (*chime.BatchSuspendUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchSuspendUserWithContext(ctx, input)
}

func (a *Activities) BatchUnsuspendUser(ctx context.Context, input *chime.BatchUnsuspendUserInput) (*chime.BatchUnsuspendUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchUnsuspendUserWithContext(ctx, input)
}

func (a *Activities) BatchUpdatePhoneNumber(ctx context.Context, input *chime.BatchUpdatePhoneNumberInput) (*chime.BatchUpdatePhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchUpdatePhoneNumberWithContext(ctx, input)
}

func (a *Activities) BatchUpdateUser(ctx context.Context, input *chime.BatchUpdateUserInput) (*chime.BatchUpdateUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.BatchUpdateUserWithContext(ctx, input)
}

func (a *Activities) CreateAccount(ctx context.Context, input *chime.CreateAccountInput) (*chime.CreateAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateAccountWithContext(ctx, input)
}

func (a *Activities) CreateAttendee(ctx context.Context, input *chime.CreateAttendeeInput) (*chime.CreateAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateAttendeeWithContext(ctx, input)
}

func (a *Activities) CreateBot(ctx context.Context, input *chime.CreateBotInput) (*chime.CreateBotOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateBotWithContext(ctx, input)
}

func (a *Activities) CreateMeeting(ctx context.Context, input *chime.CreateMeetingInput) (*chime.CreateMeetingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateMeetingWithContext(ctx, input)
}

func (a *Activities) CreateMeetingWithAttendees(ctx context.Context, input *chime.CreateMeetingWithAttendeesInput) (*chime.CreateMeetingWithAttendeesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateMeetingWithAttendeesWithContext(ctx, input)
}

func (a *Activities) CreatePhoneNumberOrder(ctx context.Context, input *chime.CreatePhoneNumberOrderInput) (*chime.CreatePhoneNumberOrderOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreatePhoneNumberOrderWithContext(ctx, input)
}

func (a *Activities) CreateProxySession(ctx context.Context, input *chime.CreateProxySessionInput) (*chime.CreateProxySessionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateProxySessionWithContext(ctx, input)
}

func (a *Activities) CreateRoom(ctx context.Context, input *chime.CreateRoomInput) (*chime.CreateRoomOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateRoomWithContext(ctx, input)
}

func (a *Activities) CreateRoomMembership(ctx context.Context, input *chime.CreateRoomMembershipInput) (*chime.CreateRoomMembershipOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateRoomMembershipWithContext(ctx, input)
}

func (a *Activities) CreateUser(ctx context.Context, input *chime.CreateUserInput) (*chime.CreateUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateUserWithContext(ctx, input)
}

func (a *Activities) CreateVoiceConnector(ctx context.Context, input *chime.CreateVoiceConnectorInput) (*chime.CreateVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) CreateVoiceConnectorGroup(ctx context.Context, input *chime.CreateVoiceConnectorGroupInput) (*chime.CreateVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.CreateVoiceConnectorGroupWithContext(ctx, input)
}

func (a *Activities) DeleteAccount(ctx context.Context, input *chime.DeleteAccountInput) (*chime.DeleteAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteAccountWithContext(ctx, input)
}

func (a *Activities) DeleteAttendee(ctx context.Context, input *chime.DeleteAttendeeInput) (*chime.DeleteAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteAttendeeWithContext(ctx, input)
}

func (a *Activities) DeleteEventsConfiguration(ctx context.Context, input *chime.DeleteEventsConfigurationInput) (*chime.DeleteEventsConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteEventsConfigurationWithContext(ctx, input)
}

func (a *Activities) DeleteMeeting(ctx context.Context, input *chime.DeleteMeetingInput) (*chime.DeleteMeetingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteMeetingWithContext(ctx, input)
}

func (a *Activities) DeletePhoneNumber(ctx context.Context, input *chime.DeletePhoneNumberInput) (*chime.DeletePhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeletePhoneNumberWithContext(ctx, input)
}

func (a *Activities) DeleteProxySession(ctx context.Context, input *chime.DeleteProxySessionInput) (*chime.DeleteProxySessionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteProxySessionWithContext(ctx, input)
}

func (a *Activities) DeleteRoom(ctx context.Context, input *chime.DeleteRoomInput) (*chime.DeleteRoomOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteRoomWithContext(ctx, input)
}

func (a *Activities) DeleteRoomMembership(ctx context.Context, input *chime.DeleteRoomMembershipInput) (*chime.DeleteRoomMembershipOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteRoomMembershipWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnector(ctx context.Context, input *chime.DeleteVoiceConnectorInput) (*chime.DeleteVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorEmergencyCallingConfiguration(ctx context.Context, input *chime.DeleteVoiceConnectorEmergencyCallingConfigurationInput) (*chime.DeleteVoiceConnectorEmergencyCallingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorEmergencyCallingConfigurationWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorGroup(ctx context.Context, input *chime.DeleteVoiceConnectorGroupInput) (*chime.DeleteVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorGroupWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorOrigination(ctx context.Context, input *chime.DeleteVoiceConnectorOriginationInput) (*chime.DeleteVoiceConnectorOriginationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorOriginationWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorProxy(ctx context.Context, input *chime.DeleteVoiceConnectorProxyInput) (*chime.DeleteVoiceConnectorProxyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorProxyWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorStreamingConfiguration(ctx context.Context, input *chime.DeleteVoiceConnectorStreamingConfigurationInput) (*chime.DeleteVoiceConnectorStreamingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorStreamingConfigurationWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorTermination(ctx context.Context, input *chime.DeleteVoiceConnectorTerminationInput) (*chime.DeleteVoiceConnectorTerminationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorTerminationWithContext(ctx, input)
}

func (a *Activities) DeleteVoiceConnectorTerminationCredentials(ctx context.Context, input *chime.DeleteVoiceConnectorTerminationCredentialsInput) (*chime.DeleteVoiceConnectorTerminationCredentialsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DeleteVoiceConnectorTerminationCredentialsWithContext(ctx, input)
}

func (a *Activities) DisassociatePhoneNumberFromUser(ctx context.Context, input *chime.DisassociatePhoneNumberFromUserInput) (*chime.DisassociatePhoneNumberFromUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DisassociatePhoneNumberFromUserWithContext(ctx, input)
}

func (a *Activities) DisassociatePhoneNumbersFromVoiceConnector(ctx context.Context, input *chime.DisassociatePhoneNumbersFromVoiceConnectorInput) (*chime.DisassociatePhoneNumbersFromVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DisassociatePhoneNumbersFromVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) DisassociatePhoneNumbersFromVoiceConnectorGroup(ctx context.Context, input *chime.DisassociatePhoneNumbersFromVoiceConnectorGroupInput) (*chime.DisassociatePhoneNumbersFromVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DisassociatePhoneNumbersFromVoiceConnectorGroupWithContext(ctx, input)
}

func (a *Activities) DisassociateSigninDelegateGroupsFromAccount(ctx context.Context, input *chime.DisassociateSigninDelegateGroupsFromAccountInput) (*chime.DisassociateSigninDelegateGroupsFromAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.DisassociateSigninDelegateGroupsFromAccountWithContext(ctx, input)
}

func (a *Activities) GetAccount(ctx context.Context, input *chime.GetAccountInput) (*chime.GetAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetAccountWithContext(ctx, input)
}

func (a *Activities) GetAccountSettings(ctx context.Context, input *chime.GetAccountSettingsInput) (*chime.GetAccountSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetAccountSettingsWithContext(ctx, input)
}

func (a *Activities) GetAttendee(ctx context.Context, input *chime.GetAttendeeInput) (*chime.GetAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetAttendeeWithContext(ctx, input)
}

func (a *Activities) GetBot(ctx context.Context, input *chime.GetBotInput) (*chime.GetBotOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetBotWithContext(ctx, input)
}

func (a *Activities) GetEventsConfiguration(ctx context.Context, input *chime.GetEventsConfigurationInput) (*chime.GetEventsConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetEventsConfigurationWithContext(ctx, input)
}

func (a *Activities) GetGlobalSettings(ctx context.Context, input *chime.GetGlobalSettingsInput) (*chime.GetGlobalSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetGlobalSettingsWithContext(ctx, input)
}

func (a *Activities) GetMeeting(ctx context.Context, input *chime.GetMeetingInput) (*chime.GetMeetingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetMeetingWithContext(ctx, input)
}

func (a *Activities) GetPhoneNumber(ctx context.Context, input *chime.GetPhoneNumberInput) (*chime.GetPhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetPhoneNumberWithContext(ctx, input)
}

func (a *Activities) GetPhoneNumberOrder(ctx context.Context, input *chime.GetPhoneNumberOrderInput) (*chime.GetPhoneNumberOrderOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetPhoneNumberOrderWithContext(ctx, input)
}

func (a *Activities) GetPhoneNumberSettings(ctx context.Context, input *chime.GetPhoneNumberSettingsInput) (*chime.GetPhoneNumberSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetPhoneNumberSettingsWithContext(ctx, input)
}

func (a *Activities) GetProxySession(ctx context.Context, input *chime.GetProxySessionInput) (*chime.GetProxySessionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetProxySessionWithContext(ctx, input)
}

func (a *Activities) GetRetentionSettings(ctx context.Context, input *chime.GetRetentionSettingsInput) (*chime.GetRetentionSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetRetentionSettingsWithContext(ctx, input)
}

func (a *Activities) GetRoom(ctx context.Context, input *chime.GetRoomInput) (*chime.GetRoomOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetRoomWithContext(ctx, input)
}

func (a *Activities) GetUser(ctx context.Context, input *chime.GetUserInput) (*chime.GetUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetUserWithContext(ctx, input)
}

func (a *Activities) GetUserSettings(ctx context.Context, input *chime.GetUserSettingsInput) (*chime.GetUserSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetUserSettingsWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnector(ctx context.Context, input *chime.GetVoiceConnectorInput) (*chime.GetVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorEmergencyCallingConfiguration(ctx context.Context, input *chime.GetVoiceConnectorEmergencyCallingConfigurationInput) (*chime.GetVoiceConnectorEmergencyCallingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorEmergencyCallingConfigurationWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorGroup(ctx context.Context, input *chime.GetVoiceConnectorGroupInput) (*chime.GetVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorGroupWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorLoggingConfiguration(ctx context.Context, input *chime.GetVoiceConnectorLoggingConfigurationInput) (*chime.GetVoiceConnectorLoggingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorLoggingConfigurationWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorOrigination(ctx context.Context, input *chime.GetVoiceConnectorOriginationInput) (*chime.GetVoiceConnectorOriginationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorOriginationWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorProxy(ctx context.Context, input *chime.GetVoiceConnectorProxyInput) (*chime.GetVoiceConnectorProxyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorProxyWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorStreamingConfiguration(ctx context.Context, input *chime.GetVoiceConnectorStreamingConfigurationInput) (*chime.GetVoiceConnectorStreamingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorStreamingConfigurationWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorTermination(ctx context.Context, input *chime.GetVoiceConnectorTerminationInput) (*chime.GetVoiceConnectorTerminationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorTerminationWithContext(ctx, input)
}

func (a *Activities) GetVoiceConnectorTerminationHealth(ctx context.Context, input *chime.GetVoiceConnectorTerminationHealthInput) (*chime.GetVoiceConnectorTerminationHealthOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.GetVoiceConnectorTerminationHealthWithContext(ctx, input)
}

func (a *Activities) InviteUsers(ctx context.Context, input *chime.InviteUsersInput) (*chime.InviteUsersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.InviteUsersWithContext(ctx, input)
}

func (a *Activities) ListAccounts(ctx context.Context, input *chime.ListAccountsInput) (*chime.ListAccountsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListAccountsWithContext(ctx, input)
}

func (a *Activities) ListAttendeeTags(ctx context.Context, input *chime.ListAttendeeTagsInput) (*chime.ListAttendeeTagsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListAttendeeTagsWithContext(ctx, input)
}

func (a *Activities) ListAttendees(ctx context.Context, input *chime.ListAttendeesInput) (*chime.ListAttendeesOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListAttendeesWithContext(ctx, input)
}

func (a *Activities) ListBots(ctx context.Context, input *chime.ListBotsInput) (*chime.ListBotsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListBotsWithContext(ctx, input)
}

func (a *Activities) ListMeetingTags(ctx context.Context, input *chime.ListMeetingTagsInput) (*chime.ListMeetingTagsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListMeetingTagsWithContext(ctx, input)
}

func (a *Activities) ListMeetings(ctx context.Context, input *chime.ListMeetingsInput) (*chime.ListMeetingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListMeetingsWithContext(ctx, input)
}

func (a *Activities) ListPhoneNumberOrders(ctx context.Context, input *chime.ListPhoneNumberOrdersInput) (*chime.ListPhoneNumberOrdersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListPhoneNumberOrdersWithContext(ctx, input)
}

func (a *Activities) ListPhoneNumbers(ctx context.Context, input *chime.ListPhoneNumbersInput) (*chime.ListPhoneNumbersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListPhoneNumbersWithContext(ctx, input)
}

func (a *Activities) ListProxySessions(ctx context.Context, input *chime.ListProxySessionsInput) (*chime.ListProxySessionsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListProxySessionsWithContext(ctx, input)
}

func (a *Activities) ListRoomMemberships(ctx context.Context, input *chime.ListRoomMembershipsInput) (*chime.ListRoomMembershipsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListRoomMembershipsWithContext(ctx, input)
}

func (a *Activities) ListRooms(ctx context.Context, input *chime.ListRoomsInput) (*chime.ListRoomsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListRoomsWithContext(ctx, input)
}

func (a *Activities) ListTagsForResource(ctx context.Context, input *chime.ListTagsForResourceInput) (*chime.ListTagsForResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListTagsForResourceWithContext(ctx, input)
}

func (a *Activities) ListUsers(ctx context.Context, input *chime.ListUsersInput) (*chime.ListUsersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListUsersWithContext(ctx, input)
}

func (a *Activities) ListVoiceConnectorGroups(ctx context.Context, input *chime.ListVoiceConnectorGroupsInput) (*chime.ListVoiceConnectorGroupsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListVoiceConnectorGroupsWithContext(ctx, input)
}

func (a *Activities) ListVoiceConnectorTerminationCredentials(ctx context.Context, input *chime.ListVoiceConnectorTerminationCredentialsInput) (*chime.ListVoiceConnectorTerminationCredentialsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListVoiceConnectorTerminationCredentialsWithContext(ctx, input)
}

func (a *Activities) ListVoiceConnectors(ctx context.Context, input *chime.ListVoiceConnectorsInput) (*chime.ListVoiceConnectorsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ListVoiceConnectorsWithContext(ctx, input)
}

func (a *Activities) LogoutUser(ctx context.Context, input *chime.LogoutUserInput) (*chime.LogoutUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.LogoutUserWithContext(ctx, input)
}

func (a *Activities) PutEventsConfiguration(ctx context.Context, input *chime.PutEventsConfigurationInput) (*chime.PutEventsConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutEventsConfigurationWithContext(ctx, input)
}

func (a *Activities) PutRetentionSettings(ctx context.Context, input *chime.PutRetentionSettingsInput) (*chime.PutRetentionSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutRetentionSettingsWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorEmergencyCallingConfiguration(ctx context.Context, input *chime.PutVoiceConnectorEmergencyCallingConfigurationInput) (*chime.PutVoiceConnectorEmergencyCallingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorEmergencyCallingConfigurationWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorLoggingConfiguration(ctx context.Context, input *chime.PutVoiceConnectorLoggingConfigurationInput) (*chime.PutVoiceConnectorLoggingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorLoggingConfigurationWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorOrigination(ctx context.Context, input *chime.PutVoiceConnectorOriginationInput) (*chime.PutVoiceConnectorOriginationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorOriginationWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorProxy(ctx context.Context, input *chime.PutVoiceConnectorProxyInput) (*chime.PutVoiceConnectorProxyOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorProxyWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorStreamingConfiguration(ctx context.Context, input *chime.PutVoiceConnectorStreamingConfigurationInput) (*chime.PutVoiceConnectorStreamingConfigurationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorStreamingConfigurationWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorTermination(ctx context.Context, input *chime.PutVoiceConnectorTerminationInput) (*chime.PutVoiceConnectorTerminationOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorTerminationWithContext(ctx, input)
}

func (a *Activities) PutVoiceConnectorTerminationCredentials(ctx context.Context, input *chime.PutVoiceConnectorTerminationCredentialsInput) (*chime.PutVoiceConnectorTerminationCredentialsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.PutVoiceConnectorTerminationCredentialsWithContext(ctx, input)
}

func (a *Activities) RedactConversationMessage(ctx context.Context, input *chime.RedactConversationMessageInput) (*chime.RedactConversationMessageOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.RedactConversationMessageWithContext(ctx, input)
}

func (a *Activities) RedactRoomMessage(ctx context.Context, input *chime.RedactRoomMessageInput) (*chime.RedactRoomMessageOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.RedactRoomMessageWithContext(ctx, input)
}

func (a *Activities) RegenerateSecurityToken(ctx context.Context, input *chime.RegenerateSecurityTokenInput) (*chime.RegenerateSecurityTokenOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.RegenerateSecurityTokenWithContext(ctx, input)
}

func (a *Activities) ResetPersonalPIN(ctx context.Context, input *chime.ResetPersonalPINInput) (*chime.ResetPersonalPINOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.ResetPersonalPINWithContext(ctx, input)
}

func (a *Activities) RestorePhoneNumber(ctx context.Context, input *chime.RestorePhoneNumberInput) (*chime.RestorePhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.RestorePhoneNumberWithContext(ctx, input)
}

func (a *Activities) SearchAvailablePhoneNumbers(ctx context.Context, input *chime.SearchAvailablePhoneNumbersInput) (*chime.SearchAvailablePhoneNumbersOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.SearchAvailablePhoneNumbersWithContext(ctx, input)
}

func (a *Activities) TagAttendee(ctx context.Context, input *chime.TagAttendeeInput) (*chime.TagAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.TagAttendeeWithContext(ctx, input)
}

func (a *Activities) TagMeeting(ctx context.Context, input *chime.TagMeetingInput) (*chime.TagMeetingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.TagMeetingWithContext(ctx, input)
}

func (a *Activities) TagResource(ctx context.Context, input *chime.TagResourceInput) (*chime.TagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.TagResourceWithContext(ctx, input)
}

func (a *Activities) UntagAttendee(ctx context.Context, input *chime.UntagAttendeeInput) (*chime.UntagAttendeeOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UntagAttendeeWithContext(ctx, input)
}

func (a *Activities) UntagMeeting(ctx context.Context, input *chime.UntagMeetingInput) (*chime.UntagMeetingOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UntagMeetingWithContext(ctx, input)
}

func (a *Activities) UntagResource(ctx context.Context, input *chime.UntagResourceInput) (*chime.UntagResourceOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UntagResourceWithContext(ctx, input)
}

func (a *Activities) UpdateAccount(ctx context.Context, input *chime.UpdateAccountInput) (*chime.UpdateAccountOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateAccountWithContext(ctx, input)
}

func (a *Activities) UpdateAccountSettings(ctx context.Context, input *chime.UpdateAccountSettingsInput) (*chime.UpdateAccountSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateAccountSettingsWithContext(ctx, input)
}

func (a *Activities) UpdateBot(ctx context.Context, input *chime.UpdateBotInput) (*chime.UpdateBotOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateBotWithContext(ctx, input)
}

func (a *Activities) UpdateGlobalSettings(ctx context.Context, input *chime.UpdateGlobalSettingsInput) (*chime.UpdateGlobalSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateGlobalSettingsWithContext(ctx, input)
}

func (a *Activities) UpdatePhoneNumber(ctx context.Context, input *chime.UpdatePhoneNumberInput) (*chime.UpdatePhoneNumberOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdatePhoneNumberWithContext(ctx, input)
}

func (a *Activities) UpdatePhoneNumberSettings(ctx context.Context, input *chime.UpdatePhoneNumberSettingsInput) (*chime.UpdatePhoneNumberSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdatePhoneNumberSettingsWithContext(ctx, input)
}

func (a *Activities) UpdateProxySession(ctx context.Context, input *chime.UpdateProxySessionInput) (*chime.UpdateProxySessionOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateProxySessionWithContext(ctx, input)
}

func (a *Activities) UpdateRoom(ctx context.Context, input *chime.UpdateRoomInput) (*chime.UpdateRoomOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateRoomWithContext(ctx, input)
}

func (a *Activities) UpdateRoomMembership(ctx context.Context, input *chime.UpdateRoomMembershipInput) (*chime.UpdateRoomMembershipOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateRoomMembershipWithContext(ctx, input)
}

func (a *Activities) UpdateUser(ctx context.Context, input *chime.UpdateUserInput) (*chime.UpdateUserOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateUserWithContext(ctx, input)
}

func (a *Activities) UpdateUserSettings(ctx context.Context, input *chime.UpdateUserSettingsInput) (*chime.UpdateUserSettingsOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateUserSettingsWithContext(ctx, input)
}

func (a *Activities) UpdateVoiceConnector(ctx context.Context, input *chime.UpdateVoiceConnectorInput) (*chime.UpdateVoiceConnectorOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateVoiceConnectorWithContext(ctx, input)
}

func (a *Activities) UpdateVoiceConnectorGroup(ctx context.Context, input *chime.UpdateVoiceConnectorGroupInput) (*chime.UpdateVoiceConnectorGroupOutput, error) {
	client, err := a.getClient(ctx)
	if err != nil {
		return nil, err
	}
	return client.UpdateVoiceConnectorGroupWithContext(ctx, input)
}
